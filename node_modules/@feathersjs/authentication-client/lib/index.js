"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("./core");
exports.AuthenticationClient = core_1.AuthenticationClient;
const hooks = __importStar(require("./hooks"));
exports.hooks = hooks;
const storage_1 = require("./storage");
exports.MemoryStorage = storage_1.MemoryStorage;
exports.defaultStorage = typeof window !== 'undefined' ?
    new storage_1.StorageWrapper(window.localStorage) : new storage_1.MemoryStorage();
exports.defaults = {
    header: 'Authorization',
    scheme: 'Bearer',
    storageKey: 'feathers-jwt',
    locationKey: 'access_token',
    locationErrorKey: 'error',
    jwtStrategy: 'jwt',
    path: '/authentication',
    Authentication: core_1.AuthenticationClient,
    storage: exports.defaultStorage
};
const init = (_options = {}) => {
    const options = Object.assign({}, exports.defaults, _options);
    const { Authentication } = options;
    return (app) => {
        const authentication = new Authentication(app, options);
        app.authentication = authentication;
        app.authenticate = authentication.authenticate.bind(authentication);
        app.reAuthenticate = authentication.reAuthenticate.bind(authentication);
        app.logout = authentication.logout.bind(authentication);
        app.hooks({
            before: {
                all: [
                    hooks.authentication(),
                    hooks.populateHeader()
                ]
            }
        });
    };
};
exports.default = init;
if (typeof module !== 'undefined') {
    module.exports = Object.assign(init, module.exports);
}
//# sourceMappingURL=index.js.map